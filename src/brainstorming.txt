# 1. generate random sentence in target lang
#    maybe prefer sentences

# 2. def cognate_tester():
'''
Several possible approaches
Approach 1: translate the word into english and see if the spelling is >80% match. check if the levenstein distance is less than 25% the lenght of the string
Approach 2: use multilingual embeddings? not sure how this would be better than approach #1
'''

# 3. go through every word in the sentence
#   3a. if the word is longer than 4 chars
#   3b. run the cognate_tester() function
#   3c. if its true, add 1 to the score. otherwise do nothing.

# 4. divide score by the number of words you tested. produce a % score for the sentence

# 5. brute-force generate sentences until you get one that is high enough to show to the user
